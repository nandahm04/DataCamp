
# 1.Relationships between variables
# Create a scatterplot of happiness_score vs. life_exp and show
import seaborn as sns
sns.scatterplot(x="life_exp",y="happiness_score",data=world_happiness)

# Show plot
plt.show()


# Scatterplot of gdp_per_cap and life_exp
sns.scatterplot(x='gdp_per_cap', y='life_exp', data=world_happiness)

# Show plot
plt.show()


# Create scatterplot of happiness_score vs life_exp with trendline
sns.lmplot(x='life_exp', y='happiness_score', data=world_happiness, ci=None)

# Show plot
plt.show()

# Correlation between life_exp and happiness_score
cor = world_happiness['life_exp'].corr(world_happiness['happiness_score'])
--------------------------------------------------------------------------------------
# 2. # Scatterplot of gdp_per_cap and life_exp
sns.scatterplot(x="gdp_per_cap",y="life_exp",data=world_happiness)

# Show plot
plt.show()


# Scatterplot of gdp_per_cap and life_exp
sns.scatterplot(x='gdp_per_cap', y='life_exp', data=world_happiness)

# Show plot
plt.show()
  
# Correlation between gdp_per_cap and life_exp
cor = world_happiness['gdp_per_cap'].corr(world_happiness['life_exp'])

print(cor)


-------------------------------------------------------------------------------------------------
# 3.Transforming variables

# Scatterplot of happiness_score vs. gdp_per_cap
sns.scatterplot(x="gdp_per_cap",y="happiness_score",data=world_happiness)

plt.show()

# Calculate correlation
cor = world_happiness['gdp_per_cap'].corr(world_happiness['happiness_score'])
print(cor)


# Create log_gdp_per_cap column
world_happiness['log_gdp_per_cap'] = np.log(world_happiness['gdp_per_cap'])

# Scatterplot of happiness_score vs. log_gdp_per_cap
sns.scatterplot(x="log_gdp_per_cap",y="happiness_score",data=world_happiness)

plt.show()

# Calculate correlation
cor = world_happiness['log_gdp_per_cap'].corr(world_happiness['happiness_score'])
print(cor)
