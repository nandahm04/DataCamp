# 1. Count plots
sns.catplot(y="Internet usage", data=survey_data, kind="count", col='Age Category')
plt.tight_layout()
plt.show()
---------------------------------------------------------------------------------------------------
# 2. Bar plots with percentages
sns.catplot(x='Gender', y='Interested in Math', data=survey_data, kind='bar')
plt.show()
---------------------------------------------------------------------------------------------------
# 3. Customizing bar plots
sns.catplot(x="study_time", y="G3",
            data=student_data,
            kind="bar",
            order=["<2 hours", "2 to 5 hours", "5 to 10 hours", ">10 hours"],
            ci=None)
plt.show()
---------------------------------------------------------------------------------------------------
# 4. Create and interpret a box plot
study_time_order = ["<2 hours", "2 to 5 hours", "5 to 10 hours", ">10 hours"]
sns.catplot(x='study_time', y='G3', data=student_data, kind='box', order=study_time_order)
plt.show()
---------------------------------------------------------------------------------------------------
# 5. Omitting outliers
sns.catplot(x='internet', y='G3', data=student_data, kind='box', hue='location', sym='')
plt.show()
---------------------------------------------------------------------------------------------------
# 6. Adjusting the whiskers
sns.catplot(x="romantic", y="G3", data=student_data, kind="box", whis=[0, 100])
plt.show()
---------------------------------------------------------------------------------------------------
# 7. Customizing point plots
sns.catplot(x="famrel", y="absences", data=student_data, kind="point", capsize=0.2, join=False)
plt.show()
---------------------------------------------------------------------------------------------------
# 8. Point plots with subgroups
import numpy 
from numpy import median 
sns.catplot(x="romantic", y="absences", data=student_data, kind="point", hue="school", ci=None, estimator=numpy.median)
plt.show()