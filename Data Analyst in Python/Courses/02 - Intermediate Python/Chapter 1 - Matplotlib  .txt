import matplotlib.pyplot as plt
import numpy as np

# Lesson 1: Line Plot(2)
# Print the last item from year and pop
print(year[-1], pop[-1])

# Make a line plot: year on the x-axis, pop on the y-axis
plt.plot(year, pop)
plt.title('World Population Over Time')
plt.xlabel('Year')
plt.ylabel('Population')
plt.show()
------------------------------------------------------------------------------------------

# Lesson 2: Line Plot(3)
# Print the last item of gdp_cap and life_exp
print(gdp_cap[-1], life_exp[-1])

# Make a line plot: gdp_cap on the x-axis, life_exp on the y-axis
plt.plot(gdp_cap, life_exp)
plt.title('World GDP vs. Life Expectancy in 2007')
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.show()
------------------------------------------------------------------------------------------

# Lesson 3: Scatter plot(1)
# Change the line plot below to a scatter plot
plt.scatter(gdp_cap, life_exp)

# Put the x-axis on a logarithmic scale
plt.xscale('log')
plt.title('Scatter Plot: GDP vs. Life Expectancy')
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.show()
------------------------------------------------------------------------------------------


# Lesson 4: Scatter plot(2)
# Build Scatter plot
plt.scatter(pop, life_exp)
plt.title('Scatter Plot: Population vs. Life Expectancy')
plt.xlabel('Population')
plt.ylabel('Life Expectancy [in years]')
plt.show()
------------------------------------------------------------------------------------------

# Lesson 5: Build a histogram(1)
# Create histogram of life_exp data
plt.hist(life_exp, bins=10, edgecolor='black')
plt.title('Histogram of Life Expectancy')
plt.xlabel('Life Expectancy [in years]')
plt.ylabel('Frequency')
plt.show()
------------------------------------------------------------------------------------------

# Lesson 6: Build a histogram(2):bins
# Build histogram with 5 bins
plt.hist(life_exp, bins=5, edgecolor='black')
plt.title('Histogram of Life Expectancy')
plt.xlabel('Life Expectancy [in years]')
plt.ylabel('Frequency')
plt.show()

# Build histogram with 20 bins
plt.hist(life_exp, bins=20, edgecolor='black')
plt.title('Histogram of Life Expectancy')
plt.xlabel('Life Expectancy [in years]')
plt.ylabel('Frequency')
plt.show()
------------------------------------------------------------------------------------------

# Lesson 7: Build a histogram(3):compare
# Histogram of life_exp, 15 bins
plt.hist(life_exp, bins=15, alpha=0.5, label='Total Population')

# Histogram of life_exp1950, 15 bins
plt.hist(life_exp1950, bins=15, alpha=0.5, label='1950 Population')
plt.legend()
plt.title('Comparison of Life Expectancy Distributions (1950 vs. Total)')
plt.xlabel('Life Expectancy [in years]')
plt.ylabel('Frequency')
plt.show()
------------------------------------------------------------------------------------------

# Lesson 8: Labels
# Basic scatter plot, log scale
plt.scatter(gdp_cap, life_exp)
plt.xscale('log') 

# Strings
xlab = 'GDP per Capita [in USD]'
ylab = 'Life Expectancy [in years]'
title = 'World Development in 2007'

# Add axis labels
plt.xlabel(xlab)
plt.ylabel(ylab)

# Add title
plt.title(title)

# After customizing, display the plot
plt.show()
------------------------------------------------------------------------------------------

# Lesson 9: Ticks
# Scatter plot
plt.scatter(gdp_cap, life_exp)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')

# Definition of tick_val and tick_lab
tick_val = [1000, 10000, 100000]
tick_lab = ['1k', '10k', '100k']

# Adapt the ticks on the x-axis
plt.xticks(tick_val, tick_lab)

# After customizing, display the plot
plt.show()
------------------------------------------------------------------------------------------

# Lesson 10: Sizes
# Import numpy as np
import numpy as np

# Store pop as a numpy array: np_pop
np_pop = np.array(pop)

# Double np_pop
np_pop = np_pop * 2

# Update: set s argument to np_pop
plt.scatter(gdp_cap, life_exp, s=np_pop)
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000, 10000, 100000], ['1k', '10k', '100k'])

# Display the plot
plt.show()
------------------------------------------------------------------------------------------

# Lesson 11: Colors
# Specify c and alpha inside plt.scatter()
plt.scatter(x=gdp_cap, y=life_exp, s=np.array(pop) * 2, c=col, alpha=0.8)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000, 10000, 100000], ['1k', '10k', '100k'])

# Show the plot
plt.show()
------------------------------------------------------------------------------------------

# Lesson 12: Additional Customization
# Scatter plot
plt.scatter(x=gdp_cap, y=life_exp, s=np.array(pop) * 2, c=col, alpha=0.8)

# Previous customizations
plt.xscale('log') 
plt.xlabel('GDP per Capita [in USD]')
plt.ylabel('Life Expectancy [in years]')
plt.title('World Development in 2007')
plt.xticks([1000, 10000, 100000], ['1k', '10k', '100k'])

# Additional customizations
plt.text(1550, 71, 'India')
plt.text(5700, 80, 'China')
plt.grid(True)  # Add grid() call

# Show the plot
plt.show()